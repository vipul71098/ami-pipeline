{
    "variables": {
        "aws_access_key": "{{env `AWS_ACCESS_KEY_ID`}}",
        "aws_secret_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
        "aws_region": "{{env `AWS_REGION`}}"
    },
    "builders": [
        {
            "access_key": "{{user `aws_access_key`}}",
            "ami_name": "NGINX_AMI_EXAMPLE {{ timestamp }}",
            "instance_type": "t2.micro",
            "region": "{{user `aws_region`}}",
            "secret_key": "{{user `aws_secret_key`}}",
            "associate_public_ip_address":"true",
            "source_ami": "ami-000722651477bd39b",
            "ssh_username": "ubuntu",
            "type": "amazon-ebs"
        }
    ],
    "provisioners": [
        {
            "type": "shell",
            "inline": [
                "sudo mkdir -p /tmp",
                "sudo chmod 777 /tmp"
            ]
        },
        {
            "type": "file",
            "source": "nginx.service",
            "destination": "/tmp/"
          },
          {
            "type": "file",
            "source": "nginx.conf",
            "destination": "/tmp/"
          },
          {
            "type": "file",
            "source": "config.json",
            "destination": "/tmp/"
          },
        {
            "type": "shell",
            "inline":[
                "sudo chmod 777 /etc/apt/sources.list",
                "sudo cat /etc/apt/sources.list",
                "sudo echo 'deb http://deb.debian.org/debian bullseye main' | /etc/apt/sources.list",
                "sudo apt-get update && sudo apt-get -y  upgrade --fix-missing",
                "sudo apt-get -y  install build-essential libpcre3  libperl-dev libpcre3-dev libatomic-ops-dev  libgoogle-perftools-dev zlib1g zlib1g-dev  libgeoip-dev libssl-dev libgd-dev libxml2 libxml2-dev uuid-dev",
                "git clone https://github.com/vozlt/nginx-module-vts.git",
                "sudo useradd -s /sbin/nologin nginx",
                "wget https://nginx.org/download/nginx-1.18.0.tar.gz && tar zxvf nginx-1.18.0.tar.gz",
                "cd nginx-1.18.0",
                "sudo apt-get install libxslt-dev",
                "sudo ./configure --user=nginx --group=nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --modules-path=/etc/nginx/modules --with-select_module --with-poll_module --with-threads --with-file-aio --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_xslt_module=dynamic --with-http_image_filter_module --with-http_image_filter_module=dynamic --with-http_geoip_module --with-http_geoip_module=dynamic --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_slice_module --with-http_stub_status_module --with-http_perl_module --with-http_perl_module=dynamic --with-mail --with-mail=dynamic --with-mail_ssl_module --with-stream --with-stream=dynamic --with-stream_ssl_module --with-stream_realip_module --with-stream_geoip_module --with-stream_geoip_module=dynamic --with-stream_ssl_preread_module --with-google_perftools_module --with-cpp_test_module --with-compat --with-pcre --with-pcre-jit  --with-zlib-asm=CPU --with-libatomic  --with-debug --with-ld-opt='-Wl,-E' --add-dynamic-module=/home/ubuntu/nginx-module-vts",
                "sudo make",
                "sudo ldconfig",
                "sudo make install",
                "sudo cp /tmp/nginx.conf  /etc/nginx/nginx.conf",
                "sudo cp /tmp/nginx.service /etc/systemd/system/nginx.service",
                "sudo mkdir -p /var/log/nginx && sudo touch /var/log/nginx/access.log",
                "sudo mkdir -p /var/log/nginx && sudo touch /var/log/nginx/error.log",
                "sudo chmod 777 /var/log/nginx/access.log",
                "sudo chmod 777 /var/log/nginx/error.log",
                "sudo systemctl start nginx",
                "sudo systemctl enable nginx",
                "wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb",
                "sudo dpkg -i -E ./amazon-cloudwatch-agent.deb",
                "cd /opt/aws/amazon-cloudwatch-agent/bin",
                "sudo cp /tmp/config.json /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/",
                "sudo cp /tmp/config.json /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/default",
                "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.d/config.json -s",
                "sudo systemctl restart amazon-cloudwatch-agent",
                "sudo  systemctl enable amazon-cloudwatch-agent",
                "sudo apt-get install -y net-tools"
            ]
        }
    ]
}